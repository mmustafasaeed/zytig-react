{"version":3,"sources":["webpack:///./routes/dashboard/Calendar/Calendar.jsx"],"names":["title","now","defaultCalendarValue","clone","add","SidebarCalendar","props","state","type","onTypeChange","bind","context","setTitle","setState","zIndex","position","margin","contextTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,MAAMA,QAAQ,UAAd;AACA,MAAMC,MAAM,uBAAZ;;AAEA,MAAMC,uBAAuBD,IAAIE,KAAJ,EAA7B;AACAD,uBAAqBE,GAArB,CAAyB,CAAC,CAA1B,EAA6B,OAA7B;;MAEMC,e;;;AAMJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0JACXA,KADW;;AAEjB,YAAKC,KAAL,GAAa;AACXC,cAAM;AADK,OAAb;AAGA,YAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AALiB;AAMlB;;;;2CAEoB;AACnB,aAAKC,OAAL,CAAaC,QAAb,CAAsBZ,KAAtB;AACD;;;0CACmB,CAEnB;;;mCACYQ,I,EAAM;AACjB,aAAKK,QAAL,CAAc;AACZL;AADY,SAAd;AAGD;;;+BACQ;AACP,eACE;AAAA;AAAA,YAAK,WAAU,SAAf,EAAyB,OAAO,EAAEM,QAAQ,IAAV,EAAgBC,UAAU,UAA1B,EAAhC;AACE;AACE,mBAAO,EAAEC,QAAQ,EAAV,EADT;AAEE,sCAFF;AAGE,4BAHF;AAIE,0BAAcf;AAJhB;AADF,SADF;AAUD;;;;;AApCGI,iB,CAEGY,Y,GAAe;AACpBL,cAAU,iBAAUM,IAAV,CAAeC;AADL,G;oBAqCTd,e","file":"server.calendar.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport FullCalendar from 'rc-calendar/lib/FullCalendar';\nimport Select from 'rc-select';\nimport moment from 'moment';\n// import zhCN from 'rc-calendar/lib/locale/zh_CN';\n// import enUS from 'rc-calendar/lib/locale/en_US';\n// import 'moment/locale/zh-cn';\n// import 'moment/locale/en-gb';\n\n\n// const cn = location.search.indexOf('cn') !== -1;\n\nconst title = 'Calendar';\nconst now = moment();\n\nconst defaultCalendarValue = now.clone();\ndefaultCalendarValue.add(-1, 'month');\n\nclass SidebarCalendar extends Component {\n\n  static contextTypes = {\n    setTitle: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 'month',\n    };\n    this.onTypeChange = this.onTypeChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.context.setTitle(title);\n  }\n  componentDidMount() {\n\n  }\n  onTypeChange(type) {\n    this.setState({\n      type,\n    });\n  }\n  render() {\n    return (\n      <div className=\"animate\" style={{ zIndex: 1000, position: 'relative' }}>\n        <FullCalendar\n          style={{ margin: 10 }}\n          Select={Select}\n          fullscreen\n          defaultValue={now}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SidebarCalendar;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/dashboard/Calendar/Calendar.jsx"],"sourceRoot":""}