{"version":3,"sources":["webpack:///external \"react-bootstrap/lib/Dropdown\"?3307","webpack:///./routes/dashboard/Charts/Chartjs/Chartjs.jsx","webpack:///external \"react-chartjs\""],"names":["title","chartOptions","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","responsive","legendTemplate","pieData","value","color","highlight","label","probability_15_data","donutOptions","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animationSteps","animationEasing","animateRotate","animateScale","scales","pieOptions","Chartjs","context","setTitle","contextTypes","func","isRequired"],"mappings":"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","file":"server.chartjs.js","sourcesContent":["module.exports = require(\"react-bootstrap/lib/Dropdown\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-bootstrap/lib/Dropdown\"\n// module id = 229\n// module chunks = 10 17","import React, { Component, PropTypes } from 'react';\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs';\nimport { Panel, Badge, Nav, NavItem, NavDropdown, MenuItem, Form, FormControl, FormGroup,\n          Button, DropdownButton, ButtonToolbar, SplitButton } from 'react-bootstrap';\nimport Dropdown, {\n  Menu as DropDownMenu,\n  Toggle as DropDownToggle,\n} from 'react-bootstrap/lib/Dropdown';\n\nconst title = 'ChartJs';\n\nconst chartOptions = {\n\n    // /Boolean - Whether grid lines are shown across the chart\n  scaleShowGridLines: true,\n\n    // String - Colour of the grid lines\n  scaleGridLineColor: 'rgba(0,0,0,.05)',\n\n    // Number - Width of the grid lines\n  scaleGridLineWidth: 1,\n\n    // Boolean - Whether to show horizontal lines (except X axis)\n  scaleShowHorizontalLines: true,\n\n    // Boolean - Whether to show vertical lines (except Y axis)\n  scaleShowVerticalLines: true,\n\n    // Boolean - Whether the line is curved between points\n  bezierCurve: true,\n\n    // Number - Tension of the bezier curve between points\n  bezierCurveTension: 0.4,\n\n    // Boolean - Whether to show a dot for each point\n  pointDot: true,\n\n    // Number - Radius of each point dot in pixels\n  pointDotRadius: 4,\n\n    // Number - Pixel width of point dot stroke\n  pointDotStrokeWidth: 1,\n\n    // Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n  pointHitDetectionRadius: 20,\n\n    // Boolean - Whether to show a stroke for datasets\n  datasetStroke: true,\n\n    // Number - Pixel width of dataset stroke\n  datasetStrokeWidth: 2,\n\n    // Boolean - Whether to fill the dataset with a colour\n  datasetFill: true,\n  responsive: true,\n\n    // String - A legend template\n  legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% '\n  + 'for (const i=0; i<datasets.length; i++){%><li><span style='\n  + '\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label)'\n  + '{%><%=datasets[i].label%><%}%></li><%}%></ul>',\n\n};\n\n\n\nconst pieData = [\n  {\n    value: 0.009,\n    color: '#F7464A',\n    highlight: '#FF5A5E',\n    label: 'Probability of Death from Prostate Cancer',\n  },\n  {\n    value: 0.079,\n    color: '#FDB45C',\n    highlight: '#FFC870',\n    label: 'Probability of Death from other cause ',\n  },\n  {\n    value: 1-(0.009+0.079),\n    color: '#2EAC6B',\n    highlight: '#57BC88',\n    label: 'Probability of Survival',\n  },\n];\n\nconst probability_15_data = [\n  {\n    value: 0.029,\n    color: '#F7464A',\n    highlight: '#FF5A5E',\n    label: 'Probability of Death from Prostate Cancer',\n  },\n  {\n    value: 0.166,\n    color: '#FDB45C',\n    highlight: '#FFC870',\n    label: 'Probability of Death from other cause ',\n  },\n  {\n    value: 1-(0.029+0.166),\n    color: '#2EAC6B',\n    highlight: '#57BC88',\n    label: 'Probability of Survival',\n  },\n];\nconst donutOptions = {\n    // Boolean - Whether we should show a stroke on each segment\n  segmentShowStroke: true,\n\n    // String - The colour of each segment stroke\n  segmentStrokeColor: '#fff',\n\n    // Number - The width of each segment stroke\n  segmentStrokeWidth: 2,\n\n    // Number - The percentage of the chart that we cut out of the middle\n  percentageInnerCutout: 70, // This is 0 for Pie charts\n\n    // Number - Amount of animation steps\n  animationSteps: 100,\n\n    // String - Animation easing effect\n  animationEasing: 'easeOutBounce',\n\n    // Boolean - Whether we animate the rotation of the Doughnut\n  animateRotate: true,\n\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n  animateScale: false,\n  responsive: true,\n  scales: true,\n\n    // String - A legend template\n  legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% '\n  + 'for (const i=0; i<segments.length; i++){%><li><span style='\n  + '\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%>'\n  + '<%=segments[i].label%><%}%></li><%}%></ul>',\n\n};\n\nconst pieOptions = {\n    // Boolean - Whether we should show a stroke on each segment\n  segmentShowStroke: true,\n\n    // String - The colour of each segment stroke\n  segmentStrokeColor: '#fff',\n\n    // Number - The width of each segment stroke\n  segmentStrokeWidth: 2,\n\n    // Number - The percentage of the chart that we cut out of the middle\n  percentageInnerCutout: 0, // This is 0 for Pie charts\n\n    // Number - Amount of animation steps\n  animationSteps: 100,\n\n    // String - Animation easing effect\n  animationEasing: 'easeOutBounce',\n\n    // Boolean - Whether we animate the rotation of the Doughnut\n  animateRotate: false,\n\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n  animateScale: false,\n  responsive: true,\n\n};\n\n\nclass Chartjs extends Component { //  eslint-disable-line\n\n  static contextTypes = {\n    setTitle: PropTypes.func.isRequired,\n  };\n\n  componentWillMount() {\n    this.context.setTitle(title);\n  }\n  render() {\n    return (\n      <div className=\"animate\">\n        <div className=\"row\">\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\" id=\"doughnutChart\">\n            <Panel\n              header={<span> Statistics from NPCR </span>}\n              bsStyle=\"primary\"\n            >\n              <div className=\"col-md-6\"><h4>10 years</h4>\n              <style>{\"\\\n              h4{\\\n                text-align: center;\\\n                padding-bottom: 5px;\\\n                }\\\n              \"}</style>\n              </div>\n              <div className=\"col-md-6\"><h4>15 years</h4></div>\n\n              <div className=\"col-md-12\">\n              <h5><Badge id=\"badge1\"> </Badge> Death from prostate cancer\n              &nbsp;  <Badge id=\"badge2\"> </Badge> Death from other causes &nbsp;\n              &nbsp;  <Badge id=\"badge3\"> </Badge> Survival</h5>\n              </div>\n              <style>{\"\\\n              h5{\\\n                padding-bottom: 10px;\\\n                padding-top: 10px;\\\n                text-align: center;\\\n              }\\\n              #badge1{\\\n                background-color: #F7464A;\\\n                }\\\n              #badge2{\\\n                background-color: #FDB45C;\\\n                }\\\n              #badge3{\\\n                background-color: #2EAC6B;\\\n                }\\\n              \"}</style>\n\n              <div className=\"col-md-6\"><Doughnut data={pieData} options={donutOptions} /></div>\n              <div className=\"col-md-6\"> <Doughnut data={probability_15_data} options={donutOptions}/></div>\n\n              <div className=\"col-md-12\" id=\"buttons\">\n                <Button  className=\"btn-rounded\">Age at diagnosis: 50-59 </Button>\n                <Button  className=\"btn-rounded\">M-stage: MX </Button>\n                <Button  className=\"btn-rounded\">PSA:10- </Button>\n                <Button  className=\"btn-rounded\">Gleason: 2-6 </Button>\n                <style>{\"\\\n                .btn-rounded{\\\n                  margin-top: 20px;\\\n                  margin-right: 2%;\\\n                  margin-left: 2%;\\\n                  }\\\n                #buttons{\\\n                  text-align: center;\\\n                }\\\n                \"}</style>\n              </div>\n\n            </Panel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Chartjs;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/dashboard/Charts/Chartjs/Chartjs.jsx","module.exports = require(\"react-chartjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-chartjs\"\n// module id = 253\n// module chunks = 17"],"sourceRoot":""}