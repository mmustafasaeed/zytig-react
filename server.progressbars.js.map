{"version":3,"sources":["webpack:///./routes/dashboard/UIElement/Progressbars/Progressbars.jsx"],"names":["title","ProgressBarsPage","props","state","value2","color1","message1","value1","value3","value4","value5","color2","color3","color4","randomizeValues","bind","randomStackValues","context","setTitle","setState","Math","floor","random","contextTypes","func","isRequired"],"mappings":"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","file":"server.progressbars.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { Panel, ProgressBar, Button } from 'react-bootstrap';\n\nconst title = 'Progress Bar';\n\nclass ProgressBarsPage extends Component {\n  static contextTypes = {\n    setTitle: PropTypes.func.isRequired,\n  };\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value2: 81,\n      color1: 'danger',\n      message1: 'Danger !!! Watch out !!!',\n      value1: 20,\n      value3: 17,\n      value4: 24,\n      value5: 11,\n      color2: 'info',\n      color3: 'danger',\n      color4: 'warning',\n    };\n    this.randomizeValues = this.randomizeValues.bind(this);\n    this.randomStackValues = this.randomStackValues.bind(this);\n  }\n\n  componentWillMount() {\n    this.context.setTitle(title);\n  }\n  randomizeValues() {\n    this.setState({ value1: Math.floor(Math.random() * 200) });\n    this.setState({ value2: Math.floor(Math.random() * 100) });\n    if (this.state.value2 < 30) {\n      this.setState({ color1: 'success' });\n      this.setState({ message1: 'success' });\n    } else if (this.state.value2 < 50) {\n      this.setState({ color1: 'info' });\n      this.setState({ message1: 'info' });\n    } else if (this.state.value2 < 70) {\n      this.setState({ color1: 'warning' });\n      this.setState({ message1: 'Warning !!! Watch out !!!' });\n    } else {\n      this.setState({ color1: 'danger' });\n      this.setState({ message1: 'Danger !!! Watch out !!!' });\n    }\n  }\n\n  randomStackValues() {\n    this.setState({ value3: Math.floor(Math.random() * 30) });\n    this.setState({ value4: Math.floor(Math.random() * 30) });\n    this.setState({ value5: Math.floor(Math.random() * 40) });\n    if (this.state.value3 < 15) {\n      this.setState({ color2: 'info' });\n    } else {\n      this.setState({ color2: 'success' });\n    }\n    if (this.state.value3 < 15) {\n      this.setState({ color2: 'primary' });\n    } else {\n      this.setState({ color2: 'warning' });\n    }\n\n    if (this.state.value3 < 15) {\n      this.setState({ color2: 'success' });\n    } else {\n      this.setState({ color2: 'danger' });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"animate\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Panel\n              header={<span>Progress Bars</span>}\n              bsStyle=\"success\"\n            >\n              <h4>Regular</h4>\n              <ProgressBar now={47} />\n              <h4>With label</h4>\n              <ProgressBar now={63} label={'63%'} />\n              <h4>Stacked</h4>\n              <ProgressBar>\n                <ProgressBar bsStyle=\"success\" now={22} key={1} />\n                <ProgressBar bsStyle=\"danger\" now={12} key={2} />\n                <ProgressBar active bsStyle=\"warning\" now={27} key={3} />\n              </ProgressBar>\n            </Panel>\n          </div>\n          <div className=\"col-md-6\">\n            <Panel\n              header={<span>Contextual Progressbars</span>}\n              bsStyle=\"info\"\n            >\n              <ProgressBar bsStyle=\"success\" now={97} />\n              <ProgressBar now={63} />\n              <ProgressBar bsStyle=\"info\" now={52} />\n              <ProgressBar bsStyle=\"warning\" now={31} />\n              <ProgressBar bsStyle=\"danger\" now={16} />\n            </Panel>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Panel\n              header={<span>Striped Progresbars</span>}\n            >\n              <ProgressBar striped bsStyle=\"success\" now={97} />\n              <ProgressBar striped bsStyle=\"info\" now={52} />\n              <ProgressBar striped now={63} />\n              <ProgressBar striped bsStyle=\"warning\" now={31} />\n              <ProgressBar striped bsStyle=\"danger\" now={16} />\n            </Panel>\n          </div>\n          <div className=\"col-md-6\">\n            <Panel\n              header={<span>Animated Progresbars</span>}\n              bsStyle=\"danger\"\n            >\n              <ProgressBar active now={65} />\n              <ProgressBar active bsStyle=\"success\" now={92} />\n              <ProgressBar active bsStyle=\"info\" now={77} />\n              <ProgressBar active bsStyle=\"warning\" now={34} />\n              <ProgressBar active bsStyle=\"danger\" now={22} />\n            </Panel>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <Panel\n              header={<span>ReactJS Dynamic Progressbars</span>}\n              bsStyle=\"warning\"\n            >\n              <h3>\n                Dynamic&nbsp;\n                <Button bsSize=\"small\" onClick={this.randomizeValues}>Randomize</Button>\n              </h3>\n              <ProgressBar max={200} now={this.state.value1} label={`${this.state.value1}/200`} />\n\n              <small><em>No animation</em></small>\n              <ProgressBar\n                bsStyle=\"success\"\n                now={this.state.value2}\n                label={`${this.state.value2}%`}\n              />\n\n              <small><em>Object (changes type based on value)</em></small>\n              <ProgressBar\n                active bsStyle={this.state.color1}\n                now={this.state.value2}\n                label={this.state.message1}\n              />\n\n              <hr />\n              <h3>\n                Stacked&nbsp;\n                <Button bsSize=\"small\" onClick={this.randomStackValues}>Randomize</Button>\n              </h3>\n              <ProgressBar>\n                <ProgressBar\n                  bsStyle={this.state.color2}\n                  now={this.state.value3}\n                  label={`${this.state.value3}%`}\n                />\n                <ProgressBar\n                  bsStyle={this.state.color3}\n                  now={this.state.value4}\n                  label={`${this.state.value4}%`}\n                />\n                <ProgressBar\n                  bsStyle={this.state.color4}\n                  now={this.state.value5}\n                  label={`${this.state.value5}%`}\n                />\n              </ProgressBar>\n            </Panel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProgressBarsPage;\n\n\n\n// WEBPACK FOOTER //\n// ./routes/dashboard/UIElement/Progressbars/Progressbars.jsx"],"sourceRoot":""}